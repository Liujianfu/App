<?xml version="1.0" encoding="utf-8" ?>
<base:ScheduleDetailPageXaml xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="EvvMobile.Pages.Schedules.ScheduleDetailPage"
             xmlns:systemViewModel="clr-namespace:EvvMobile.ViewModels.Systems;assembly=EvvMobile"
             xmlns:base="clr-namespace:EvvMobile.Pages.Schedules;assembly=EvvMobile"
             xmlns:systems="clr-namespace:EvvMobile.Views.Systems;assembly=EvvMobile"
             xmlns:statics="clr-namespace:EvvMobile.Statics;assembly=EvvMobile"
             xmlns:customControls="clr-namespace:EvvMobile.Customizations.CustomControls;assembly=EvvMobile"
             xmlns:customizations="clr-namespace:EvvMobile.Customizations;assembly=EvvMobile"
             xmlns:views="clr-namespace:EvvMobile.Views.Schedules;assembly=EvvMobile">
  <ContentPage.Content>
      <customizations:PopupLayout x:Name="PopupView" >
          <customizations:PopupLayout.Content>

        <ScrollView x:Name="ShiftDetailScrollview" BackgroundColor="{x:Static statics:Palette.LevelThreeBackgroundColor}" >

            <StackLayout HorizontalOptions="FillAndExpand" Orientation="Vertical"  
                         Padding="10,0,10,0">
              <systems:WaitingIndicator IsVisible="{Binding IsBusy}"></systems:WaitingIndicator>
                <StackLayout  BackgroundColor="{x:Static statics:Palette.LevelTwoHeaderColor}" Margin="-10,0,-10,0" Padding="10,10,10,0">
              
                 <Grid HorizontalOptions="FillAndExpand"
                      BackgroundColor="{x:Static statics:Palette.LevelTwoHeaderColor}">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*" />
                        <RowDefinition Height="3*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <StackLayout Grid.Row="0" Grid.Column="0" >
                      <StackLayout Orientation="Horizontal">
                        <Label Text="Beneficiary Name" FontSize="16" TextColor="White" />
                          <Image x:Name="ClientProfileImage" Margin="10,0,0,0"
                                 HeightRequest="20"
                                 WidthRequest="20"
                                 Source="{Binding . ,  Converter={StaticResource EqualityToImageConverter}, ConverterParameter=clientprofile}">

                          </Image>
                      </StackLayout>
                      
                        <Label Text="{Binding ClientFullName}" TextColor="White" FontSize="16" FontAttributes="Bold" />
                    </StackLayout>
                    <StackLayout Grid.Row="0" Grid.Column="1" Padding="10,0,0,0">
                        <Label Text="Beneficiary MA#" TextColor="White" FontSize="16" />
                        <Label Text="{Binding ClientMaNumber}" TextColor="White" FontSize="16" FontAttributes="Bold" />
                    </StackLayout>
                    <StackLayout Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalOptions="CenterAndExpand">
                        <Label Text="Planned Visit Date Time" TextColor="White" 
                               FontAttributes="Bold" HorizontalTextAlignment="Center"></Label>
                        <Label
                            Text=" {Binding ServiceStartDateTime, Converter={StaticResource MonthDatePatternConverter}}"
                            TextColor="White" FontSize="16" FontAttributes="Bold" HorizontalTextAlignment="Center" />
                        <Label Text="{Binding ScheduleTimeRangeString }" TextColor="White" FontSize="16"
                               FontAttributes="Bold" HorizontalTextAlignment="Center" />
                    </StackLayout>

                </Grid>
                  <Grid HorizontalOptions="FillAndExpand"
                                     BackgroundColor="{x:Static statics:Palette.LevelTwoHeaderColor}">

                    <Grid.RowDefinitions>
                      <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="40" />
                    </Grid.ColumnDefinitions>
                     <StackLayout Grid.Row="0" Grid.Column="0"  Orientation="Horizontal" VerticalOptions="Center">
                      <Label Text="Visit Status:" TextColor="White" FontSize="16" />
                      <Label Text="{Binding WorkflowStatusDisplayName}" TextColor="White" FontSize="16" FontAttributes="Bold" />
                    </StackLayout>
                      <StackLayout Grid.Row="0" Grid.Column="1" HorizontalOptions="End" VerticalOptions="Center">
                           <Image x:Name="TimeLineImage" Source="{Binding . ,  Converter={StaticResource EqualityToImageConverter}, ConverterParameter=Timeline}"></Image>
                      </StackLayout>
                  </Grid>                
                </StackLayout>
              <Frame Padding="0,0,0,0" CornerRadius="5" BackgroundColor="{x:Static statics:Palette.LevelFourBackgroundColor}">
                <StackLayout >
                  <StackLayout BackgroundColor="{x:Static statics:Palette.LevelTwoHeaderColor}" Orientation="Horizontal"
                               HorizontalOptions="FillAndExpand">
                    <Image x:Name="CollapseServiceInfoImage"
                           HeightRequest="20"
                           WidthRequest="20"
                           Source="{Binding . ,  Converter={StaticResource EqualityToImageConverter}, ConverterParameter=expandarrow40}">

                    </Image>
                    <Label Text="Service Info"  VerticalOptions="CenterAndExpand"
                           HorizontalOptions="CenterAndExpand"
                           TextColor ="White"
                           FontSize="20"></Label>

                  </StackLayout>
                  <Grid x:Name="ServiceInfoGrid"
                        IsVisible="False"
                    HorizontalOptions="FillAndExpand">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="1*" />
                      <RowDefinition Height="1*" />
                      <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <StackLayout Padding="5,0,0,0"  Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" >
                      <Label Text="Service Name" FontSize="16" FontAttributes="Bold" ></Label>
                      <Label Text="{Binding ServiceName}" FontSize="16"  ></Label>
                    </StackLayout>
                    <StackLayout Padding="5,0,0,0"  Grid.Row="1" Grid.Column="0" >
                      <Label Text="Service Code" FontSize="16" FontAttributes="Bold"></Label>
                      <Label Text="{Binding ProcedureCode}" FontSize="16" ></Label>
                    </StackLayout>
                    <StackLayout Grid.Row="1" Grid.Column="1" >
                      <Label Text="Modifier" FontSize="16" FontAttributes="Bold" ></Label>
                      <Label Text="{Binding Modifiers}" FontSize="16" LineBreakMode="WordWrap"></Label>
                    </StackLayout>
                    <StackLayout Padding="5,0,0,0"   Grid.Row="2" Grid.Column="0" >
                      <Label Text="Provider Name" FontSize="16"  FontAttributes="Bold"></Label>
                      <Label Text="{Binding ProviderName}" FontSize="16"></Label>                
                    </StackLayout>
                    <StackLayout Grid.Row="2" Grid.Column="1" HorizontalOptions="CenterAndExpand">
                      <Label Text="Provider Number" FontSize="16"  FontAttributes="Bold"></Label>
                      <Label Text="{Binding ProviderMaNumber}" FontSize="16" ></Label>   
                    </StackLayout>
  
                  </Grid>
                </StackLayout>

              </Frame>

              <Frame BackgroundColor="{x:Static statics:Palette.LevelTwoBackgroundColor}"
                      Padding="0,0,0,0"
                      CornerRadius="3"> 
                  <StackLayout >
                    <StackLayout BackgroundColor="{x:Static statics:Palette.LevelTwoHeaderColor}" Orientation="Horizontal" 
                                 HorizontalOptions="FillAndExpand">
                      <Image x:Name="CollapseImage"
                             HeightRequest="20"
                             WidthRequest="20"
                             Source="{Binding . ,  Converter={StaticResource EqualityToImageConverter}, ConverterParameter=expandarrow40}">
                      
                      </Image>
                      <Label Text="Service Locations"  VerticalOptions="CenterAndExpand" 
                             HorizontalOptions="CenterAndExpand" 
                             TextColor ="White"
                             FontSize="20"></Label>
                        <Image x:Name="PinView"
                               IsVisible="False"
                               BackgroundColor="Transparent"
                               HeightRequest="20"
                               WidthRequest="20"
                               HorizontalOptions="End"
                               Source="{Binding . ,  Converter={StaticResource EqualityToImageConverter}, ConverterParameter=pin}"
                        >
                        </Image>
                    </StackLayout>
                    <StackLayout x:Name="MapStackLayout"  HeightRequest="200" IsVisible="False">
                      <customizations:CustomMap
                          x:Name="ClockInOutLocationMap"
                          IsShowingUser="False"
                          MapType="Street"
                          HasZoomEnabled="True"
                          ShowRoute ="False"   
                          HeightRequest="200"
                        />                      
                    </StackLayout>

                  </StackLayout>
                </Frame>
              <Label Text="Beneficiary Address:" FontAttributes="Bold" ></Label>
              <Label Text="{Binding ServiceRenderAddress}" Margin="5,0,0,0"></Label>
              <Label Text="Verified Address:" FontAttributes="Bold" ></Label>
              <Label IsVisible="{Binding IsClockInDone}" Text="{Binding ClockInAddress}" Margin="5,0,0,0"></Label>      
              <Label IsVisible="{Binding IsClockInDone,  Converter={StaticResource BoolToNegativeConverter}}" 
                     Text="{Binding ClockOutAddress}" Margin="5,0,0,0"></Label>  
            
              <Frame Padding="0,0,0,0" CornerRadius="5" BackgroundColor="{x:Static statics:Palette.LevelTwoBackgroundColor}">
                  <StackLayout >
                      <StackLayout BackgroundColor="{x:Static statics:Palette.LevelTwoHeaderColor}" Orientation="Horizontal" 
                                   HorizontalOptions="FillAndExpand">
                          <Image x:Name="CollapseTasksImage"
                                 HeightRequest="20"
                                 WidthRequest="20"
                                 Source="{Binding . ,  Converter={StaticResource EqualityToImageConverter}, ConverterParameter=expandarrow40}">
                      
                          </Image>
                          <Label Text="Tasks"  VerticalOptions="CenterAndExpand" 
                                 HorizontalOptions="CenterAndExpand" 
                                 TextColor ="White"
                                 FontSize="20"></Label>
                          <Image x:Name="AddNewTask"
                                 IsVisible="False"
                                 BackgroundColor="Transparent"
                                 HeightRequest="20"
                                 WidthRequest="20"
                                 HorizontalOptions="End"
                                 Source="{Binding . ,  Converter={StaticResource EqualityToImageConverter}, ConverterParameter=add40}"
                          >
                          </Image>                        
                          <Image x:Name="PinTaskView"
                                 IsVisible="False"
                                 BackgroundColor="Transparent"
                                 HeightRequest="20"
                                 WidthRequest="20"
                                 HorizontalOptions="End"
                                 Source="{Binding . ,  Converter={StaticResource EqualityToImageConverter}, ConverterParameter=pin}"
                          >
                          </Image>
                      </StackLayout>
                    <views:VisitTaskListView
                        x:Name="VisitTaskList"
                        ItemsSource=" {Binding VisitTasks}"
                        BindingContext=" {Binding .}"
                        HasUnevenRows="true"
                        IsPullToRefreshEnabled="False"
                        PopupLayout ="{x:Reference PopupView}"
                        IsVisible="False"
                    >
                    </views:VisitTaskListView>
                    <Button Text="Collect Clinical Data" Clicked="OnCollectCMButtonClicked"></Button>
                  </StackLayout>           
              </Frame>          
            
              <StackLayout  Margin="0,5,0,0">
                  <StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <Label Text="Actual Visit Date:" FontAttributes="Bold"></Label>
                        <Label IsVisible="{Binding IsClockInDone}" Text="{Binding ClockInTime, Converter={StaticResource MonthDatePatternConverter}}" ></Label>
                        <Label IsVisible="{Binding IsClockInDone,  Converter={StaticResource BoolToNegativeConverter}}" Text="{Binding ClockOutTime, Converter={StaticResource MonthDatePatternConverter}}" ></Label>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal" IsVisible="{Binding IsClockOutDone}">
                      <Label Text="Travel Distance:" FontAttributes="Bold"></Label>
                      <Label  Text="{Binding TravelDistance}" ></Label>
                      <Label  Text=" Miles" Margin="5,0,0,5" ></Label>
                    </StackLayout>                    
                  </StackLayout>

                <Frame 
                        Padding="3,0,3,0"
                        CornerRadius="5"
                        BackgroundColor="{x:Static statics:Palette.LevelFourBackgroundColor}"
                             >
                  <StackLayout>
                       <StackLayout IsVisible="{Binding IsClockInDone,  Converter={StaticResource BoolToNegativeConverter}}">

                          <StackLayout Orientation="Horizontal" >
                            <Label Text="Time    In:"  VerticalTextAlignment="Center" FontAttributes="Bold"></Label>
                            <customizations:NullableTimePicker x:Name="StartTimePicker" Format="hh:mm tt" NullableTime="{Binding TimeIn}"
                                         Margin="10,0,0,0" HorizontalOptions="Start"/>
                            <customizations:NullableDatePicker x:Name="StartDatePicker" Format="MM/dd/yyyy" NullableDate="{Binding ClockInDate}"
                                         Margin="10,0,0,0" HorizontalOptions="Start"/>
                          </StackLayout>
                    
                                   
                       </StackLayout>
                       <StackLayout Orientation="Horizontal" IsVisible="{Binding IsClockInDone}">
                          <Label Text="Time    In:"  VerticalTextAlignment="Center" FontAttributes="Bold"></Label>
                            <Label  Text="{Binding ClockInTime, Converter={StaticResource TimePatternConverter}}"
                                    Margin="10,0,0,0" HorizontalOptions="Start" VerticalTextAlignment="Center"/>
                       </StackLayout>    
                    <StackLayout IsVisible="{Binding IsClockOutDone,  Converter={StaticResource BoolToNegativeConverter}}">
                      <StackLayout Orientation="Horizontal" >
                        <Label Text="Time Out:"  VerticalTextAlignment="Center" FontAttributes="Bold"></Label>
                        <customizations:NullableTimePicker x:Name="EndTimePicker" Format="hh:mm tt" NullableTime="{Binding TimeOut}" 
                                    Margin="10,0,0,0" HorizontalOptions="Start"/>
                        <customizations:NullableDatePicker x:Name="EndDatePicker" Format="MM/dd/yyyy" NullableDate="{Binding ClockOutDate}" 
                                       Margin="10,0,0,0" HorizontalOptions="Start"/>
                      </StackLayout>                  
                  </StackLayout>


                    <StackLayout Orientation="Horizontal" IsVisible="{Binding IsClockOutDone}">
                        <Label Text="Time Out:"  VerticalTextAlignment="Center" FontAttributes="Bold"></Label>
                        <Label  Text="{Binding ClockOutTime, Converter={StaticResource TimePatternConverter}}"
                                Margin="10,0,0,0" HorizontalOptions="Start"/>
                    </StackLayout>                   
                  </StackLayout>
                  </Frame>  
                   


                  <StackLayout IsVisible="{Binding IsClockInDone,  Converter={StaticResource BoolToNegativeConverter}}">
                      <StackLayout IsVisible="{Binding NeedReasonForLateOrEarly}" Orientation="Horizontal" Padding="5,15,5,15" BackgroundColor="{x:Static statics:Palette.WarningBackgroundColor}">
                          <Image Source="{Binding . ,  Converter={StaticResource EqualityToImageConverter}, ConverterParameter=LateWarning}"></Image>
                          <Label Text="You are late(early), the reason for late(early) is required."  HorizontalTextAlignment="Start" LineBreakMode="WordWrap"></Label>
                      </StackLayout>
                  </StackLayout>         
                <StackLayout IsVisible="{Binding NeedReasonForLateOrEarly}">
              
                  <Label Text="Reason for late(early) visit:"  HorizontalTextAlignment="Start" FontAttributes="Bold"></Label>
                  <Frame BackgroundColor="{x:Static statics:Palette.WarningBackgroundColor}"
                         Padding="3,3,3,3"
                         CornerRadius="5">
                  <Picker x:Name="LateEarlReason"  
                          BackgroundColor="{x:Static statics:Palette.WarningBackgroundColor}"
                          VerticalOptions="CenterAndExpand" SelectedIndexChanged="OnReasonsSelectedIndexChanged" 
                    IsEnabled="{Binding IsClockInDone,  Converter={StaticResource BoolToNegativeConverter}}">
                      <Picker.Items>
                          <x:String>Delayed by previous appointment</x:String>
                          <x:String>Previous appointment ended early</x:String>
                          <x:String>Delayed in traffic</x:String>
                          <x:String>Delayed by transportation issues</x:String>
                          <x:String>Beneficiary not available at appointed time</x:String>
                          <x:String>Beneficiary refused service</x:String>
                          <x:String>Other</x:String>
                      </Picker.Items>

                  </Picker>                    
                  </Frame>
   
                      
                  <StackLayout IsVisible="{Binding ShowOtherLateOrEarlyReason}" >
                    <Frame BackgroundColor="{x:Static statics:Palette.WarningBackgroundColor}"
                           Padding="3,3,3,3"
                           CornerRadius="5">
                      <Editor  Text="{Binding OtherReasonForLateOrEarly }" HeightRequest = "100" HorizontalOptions="FillAndExpand"
                                BackgroundColor="{x:Static statics:Palette.WarningBackgroundColor}"
                                IsEnabled = "{Binding IsClockInDone,  Converter={StaticResource BoolToNegativeConverter}}" >
                      </Editor>                    
                    </Frame>

                </StackLayout>    
                </StackLayout>                  
              </StackLayout>
              <Label Margin="10,0,0,0" FontAttributes="Bold">Signature:</Label>
              <Frame BackgroundColor="{x:Static statics:Palette.LevelFourBackgroundColor}"
                     Padding="3,10,3,10"
                     CornerRadius="5">
              <StackLayout   Padding="0,3,0,3">
                <StackLayout x:Name="SignatureImageLayout">
                    <Image x:Name="SignatureImage" HeightRequest="30" WidthRequest="200" HorizontalOptions="StartAndExpand"
                    ></Image>                  
                </StackLayout>
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <StackLayout Grid.Row="0">
                    <Image x:Name="PhotoImage" />
                    <Label IsVisible="{Binding ClientFaceRecognized}" HorizontalOptions="CenterAndExpand" Text="Face Recognition Passed"></Label>
                    <Label x:Name="FaceRecognitionFail" HorizontalOptions="CenterAndExpand" IsVisible="False"></Label>
                    <Button x:Name="CameraButton" Text="Face Recognition" IsEnabled="{Binding ClientFaceRecognized,  Converter={StaticResource BoolToNegativeConverter}}" />
                  </StackLayout>
                  <StackLayout Grid.Row="1">
                    <Label x:Name="BarCodeLabel"/>
                    <Button x:Name="BarCodeButton" Text="Scan Code"  Clicked="OnScanBarCode"/>
                  </StackLayout>
                </Grid>
                
              </StackLayout>              
              </Frame>

                <BoxView Color="{x:Static statics:Palette.NavigationbarColor}" HeightRequest = "1" HorizontalOptions="FillAndExpand"/>
                <StackLayout HorizontalOptions="CenterAndExpand"   Orientation="Horizontal" IsVisible="{Binding IsStaffLogin, Source={x:Static systemViewModel:SystemViewModel.Instance}}" 
                             Margin="0,5,0,10">
                    <customControls:ImageButton x:Name="ClockInButton"
                                                Padding="0,0,0,0"
                                                BackgroundColor="#a2e2ef"
                                                HeightRequest="25"
                                                ImageHeightRequest="25"
                                                ImageWidthRequest="90"
                                                Orientation="ImageToLeft"
                                                BorderRadius="10"
                                                WidthRequest="90"
                                                Clicked="OnClockInButtonClicked"
                                                IsEnabled="{Binding ClockInEnable}"
                                                Source="ClockIn.png"
                                                DisabledSource="ClockInDisabled.png">
                    </customControls:ImageButton>
                    <customControls:ImageButton x:Name="ClockOutButton"
                                                Padding="0,0,0,0"
                                                BackgroundColor="#a2e2ef"
                                                HeightRequest="25"
                                                ImageHeightRequest="25"
                                                ImageWidthRequest="90"
                                                Orientation="ImageToLeft"
                                                BorderRadius="10"
                                                WidthRequest="90"
                                                Clicked="OnClockOutButtonClicked"
                                                IsEnabled="{Binding ClockOutEnable}"
                                                Source="ClockOut.png"
                                                DisabledSource="ClockOutDisabled.png">
                    </customControls:ImageButton>
                </StackLayout>
            </StackLayout>        
        </ScrollView>
          </customizations:PopupLayout.Content>
      </customizations:PopupLayout>
  </ContentPage.Content>
</base:ScheduleDetailPageXaml>